import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { animate, style, transition, trigger } from '@angular/animations';
import { QuizQuestion, QuizResponse } from './components/quiz-question/quiz-question.component';
import { getViewportDevice } from '@core/utils/formatters';

const slideLeftRightAnimation = trigger('slideLeftRight', [
  transition('void -> mobileEnter', [
    style({
      opacity: 0,
      position: 'absolute',
      width: '100%',
      height: '100%',
      transform: 'translateX(100px)',
      paddingLeft: '1rem',
      paddingRight: '1rem',
    }),
    animate('0.25s', style({ opacity: 1, transform: 'translateX(-1rem)' })),
  ]),
  transition('mobileEnter -> void', [
    style({
      opacity: 1,
      position: 'absolute',
      width: '100%',
      height: '100%',
      transform: 'translateX(-1rem)',
      paddingLeft: '1rem',
      paddingRight: '1rem',
    }),
    animate('0.25s', style({ opacity: 0, transform: 'translateX(-100px)' })),
  ]),

  transition('void -> tabletEnter', [
    style({
      opacity: 0,
      position: 'absolute',
      height: '100%',
      width: '100%',
      transform: 'translateX(100px)',
      paddingLeft: '1.5rem',
      paddingRight: '1.5rem',
    }),
    animate('0.25s', style({ opacity: 1, transform: 'translateX(-1.5rem)' })),
  ]),
  transition('tabletEnter -> void', [
    style({
      opacity: 1,
      position: 'absolute',
      height: '100%',
      width: '100%',
      transform: 'translateX(-1.5rem)',
      paddingLeft: '1.5rem',
      paddingRight: '1.5rem',
    }),
    animate('0.25s', style({ opacity: 0, transform: 'translateX(-100px)' })),
  ]),

  transition('void -> laptopEnter', [
    style({
      opacity: 0,
      position: 'absolute',
      height: '100%',
      width: '45rem',
      transform: 'translateX(100px)',
    }),
    animate('0.25s', style({ opacity: 1, transform: 'translateX(0)' })),
  ]),
  transition('laptopEnter -> void', [
    style({
      opacity: 1,
      position: 'absolute',
      height: '100%',
      width: '45rem',
      transform: 'translateX(0)',
    }),
    animate('0.25s', style({ opacity: 0, transform: 'translateX(-100px)' })),
  ]),
]);

@Component({
  selector: 'app-quiz',
  templateUrl: './quiz.component.html',
  styleUrl: './quiz.component.scss',
  animations: [slideLeftRightAnimation],
})
export class QuizComponent {
  protected curIndex = -1;
  protected questions: QuizQuestion[] = [
    {
      index: 0,
      question: 'Qn 1: Is this quote below generated by AIMie or written by a human?',
      content:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
    },
    {
      index: 1,
      question: 'Qn 2: Is this quote below generated by AIMie or written by a human?',
      content:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
    },
    {
      index: 2,
      question: 'Qn 3: Is this quote below generated by AIMie or written by a human?',
      content:
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
    },
  ];

  constructor(
    protected route: ActivatedRoute,
    private router: Router
  ) {}

  protected getResponse(e: QuizResponse): void {
    console.log(e);
    this.curIndex += 1;
  }

  protected start(): void {
    this.curIndex += 1;
  }

  protected mainMenu(): void {
    this.router.navigate(['../'], { relativeTo: this.route });
  }

  protected getAnimationState(): string {
    let rv: string;
    const device = getViewportDevice();
    if (device === 'mobile') {
      rv = 'mobileEnter';
    } else if (device === 'tablet') {
      rv = 'tabletEnter';
    } else {
      rv = 'laptopEnter';
    }
    return rv;
  }
}
